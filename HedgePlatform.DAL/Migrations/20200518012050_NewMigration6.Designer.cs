// <auto-generated />
using System;
using HedgePlatform.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace HedgePlatform.DAL.Migrations
{
    [DbContext(typeof(HedgeDBContext))]
    [Migration("20200518012050_NewMigration6")]
    partial class NewMigration6
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("HedgePlatform.DAL.Entities.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("FlatId")
                        .HasColumnType("integer");

                    b.Property<string>("GosNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FlatId");

                    b.ToTable("Car");
                });

            modelBuilder.Entity("HedgePlatform.DAL.Entities.Check", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CheckCode")
                        .HasColumnType("integer");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("SendTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Check");
                });

            modelBuilder.Entity("HedgePlatform.DAL.Entities.Counter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("CounterStatusId")
                        .HasColumnType("integer");

                    b.Property<int>("CounterTypeId")
                        .HasColumnType("integer");

                    b.Property<int>("FlatId")
                        .HasColumnType("integer");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CounterStatusId");

                    b.HasIndex("CounterTypeId");

                    b.HasIndex("FlatId");

                    b.ToTable("Counter");
                });

            modelBuilder.Entity("HedgePlatform.DAL.Entities.CounterStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CounterStatus");
                });

            modelBuilder.Entity("HedgePlatform.DAL.Entities.CounterType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CounterType");
                });

            modelBuilder.Entity("HedgePlatform.DAL.Entities.CounterValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CounterId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateValue")
                        .HasColumnType("timestamp without time zone");

                    b.Property<byte[]>("Image")
                        .HasColumnType("bytea");

                    b.Property<double>("Value")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("CounterId");

                    b.ToTable("CounterValue");
                });

            modelBuilder.Entity("HedgePlatform.DAL.Entities.Flat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("HouseId")
                        .HasColumnType("integer");

                    b.Property<int>("MaxCounters")
                        .HasColumnType("integer");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("HouseId");

                    b.ToTable("Flat");
                });

            modelBuilder.Entity("HedgePlatform.DAL.Entities.House", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Corpus")
                        .HasColumnType("text");

                    b.Property<string>("Home")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("HouseManagerId")
                        .HasColumnType("integer");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("HouseManagerId");

                    b.ToTable("House");
                });

            modelBuilder.Entity("HedgePlatform.DAL.Entities.HouseManager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("Image")
                        .HasColumnType("bytea");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("HouseManager");
                });

            modelBuilder.Entity("HedgePlatform.DAL.Entities.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DateMessage")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Message");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Message");
                });

            modelBuilder.Entity("HedgePlatform.DAL.Entities.Phone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Phone");
                });

            modelBuilder.Entity("HedgePlatform.DAL.Entities.Resident", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool?>("Chairman")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("DateChange")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateRegistration")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FIO")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("FlatId")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<bool>("Owner")
                        .HasColumnType("boolean");

                    b.Property<int>("PhoneId")
                        .HasColumnType("integer");

                    b.Property<string>("ResidentStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FlatId");

                    b.HasIndex("PhoneId")
                        .IsUnique();

                    b.ToTable("Resident");
                });

            modelBuilder.Entity("HedgePlatform.DAL.Entities.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("PhoneId")
                        .HasColumnType("integer");

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PhoneId");

                    b.ToTable("Session");
                });

            modelBuilder.Entity("HedgePlatform.DAL.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Psw")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("HedgePlatform.DAL.Entities.VoteOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("VoteId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("VoteId");

                    b.ToTable("VoteOption");
                });

            modelBuilder.Entity("HedgePlatform.DAL.Entities.VoteResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("DateVote")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("ResidentId")
                        .HasColumnType("integer");

                    b.Property<int>("VoteOptionId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ResidentId");

                    b.HasIndex("VoteOptionId");

                    b.ToTable("VoteResult");
                });

            modelBuilder.Entity("HedgePlatform.DAL.Entities.Vote", b =>
                {
                    b.HasBaseType("HedgePlatform.DAL.Entities.Message");

                    b.HasDiscriminator().HasValue("Vote");
                });

            modelBuilder.Entity("HedgePlatform.DAL.Entities.Car", b =>
                {
                    b.HasOne("HedgePlatform.DAL.Entities.Flat", "Flat")
                        .WithMany("Cars")
                        .HasForeignKey("FlatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HedgePlatform.DAL.Entities.Counter", b =>
                {
                    b.HasOne("HedgePlatform.DAL.Entities.CounterStatus", "CounterStatus")
                        .WithMany()
                        .HasForeignKey("CounterStatusId");

                    b.HasOne("HedgePlatform.DAL.Entities.CounterType", "CounterType")
                        .WithMany()
                        .HasForeignKey("CounterTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HedgePlatform.DAL.Entities.Flat", "Flat")
                        .WithMany("Counters")
                        .HasForeignKey("FlatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HedgePlatform.DAL.Entities.CounterValue", b =>
                {
                    b.HasOne("HedgePlatform.DAL.Entities.Counter", "Counter")
                        .WithMany("CounterValues")
                        .HasForeignKey("CounterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HedgePlatform.DAL.Entities.Flat", b =>
                {
                    b.HasOne("HedgePlatform.DAL.Entities.House", "House")
                        .WithMany("Flats")
                        .HasForeignKey("HouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HedgePlatform.DAL.Entities.House", b =>
                {
                    b.HasOne("HedgePlatform.DAL.Entities.HouseManager", "HouseManager")
                        .WithMany("Houses")
                        .HasForeignKey("HouseManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HedgePlatform.DAL.Entities.Resident", b =>
                {
                    b.HasOne("HedgePlatform.DAL.Entities.Flat", "Flat")
                        .WithMany("Resident")
                        .HasForeignKey("FlatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HedgePlatform.DAL.Entities.Phone", "Phone")
                        .WithOne("Resident")
                        .HasForeignKey("HedgePlatform.DAL.Entities.Resident", "PhoneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HedgePlatform.DAL.Entities.Session", b =>
                {
                    b.HasOne("HedgePlatform.DAL.Entities.Phone", "Phone")
                        .WithMany()
                        .HasForeignKey("PhoneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HedgePlatform.DAL.Entities.VoteOption", b =>
                {
                    b.HasOne("HedgePlatform.DAL.Entities.Vote", "Vote")
                        .WithMany("VoteOptions")
                        .HasForeignKey("VoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HedgePlatform.DAL.Entities.VoteResult", b =>
                {
                    b.HasOne("HedgePlatform.DAL.Entities.Resident", "Resident")
                        .WithMany()
                        .HasForeignKey("ResidentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HedgePlatform.DAL.Entities.VoteOption", "VoteOption")
                        .WithMany()
                        .HasForeignKey("VoteOptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
